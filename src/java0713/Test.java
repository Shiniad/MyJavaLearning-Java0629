package java0713;

import java.util.Arrays;

/**
 * HTTP和网络编程
 * 
 * ## 网络
 * 网络：多台主机通过连接组成，核心为互相之间的通讯
 * 局域网：网络的主机数量和范围，网络的组网结构，组网形态为星形结构，通常使用交换机或集线器
 * 广域网：internet，所有联网设备的总合
 * 
 * 路由器：在复杂网络结构中找到从一个主机到另一个主机的相对优化路线
 * 		路由器实际隔离了广域网和局域网-网关
 * 交换机：局域网通讯的中心节点 背板带宽 / 每秒处理的包数量
 * 	
 * wifi（access pointer）不路由器
 * 
 * ## 基本网络配置 IP
 * **IP**：网络中主机的地址，通迅 IPV4 IPV6
 * IP地址的基本特点：32位二进制组成的地址114.114.114.114是一种通俗表示法
 * xxx表示0到255的数字
 * **A类IP**：第一位从1-126 通常用作Internet的公网地址，默认的子网掩码为255.0.0.0
 * **B类IP**：第一位128-191 默认的子网掩码为255.255.0.0
 * C类IP：第一位192-223 通常用作局域网地址，默认的子网掩码为255.255.255.0
 * D类IP：第一位224-239
 * E类IP：第一位240-255
 * 127开头的永远代表本机范围的一个特殊概念：本地回环地址localhost 127.0.0.1
 * 
 * **子网掩码**：用来约束一个IP地址中哪一部分是**网络ID**，哪一部分是**主机ID**
 * 举列：192.168.0.1对应子网掩码255.255.255.0 意味着前三个192.168.1都代表一个局域网，只有最后一位代表主机地址
 * 如果使用上面的网络配置，则前三位都必须相同，最后一位必须为不同的机器组成的网络才可以互相通讯
 * 不同网络的通讯只能通过路由器实现
 * 
 * 跨网络通讯需要路由设备，路由是跨两个网络的网络设备（在两个网络中都有地址），可以实现转发
 * 所有某一个网段比如192.168.1.x的数据如果要发送到192.168.2.x，则必须由一个路由器（比如192.168.1.1）转发给192.168.2.x，这种能负责转发数据出去的网络设备称为**网关**
 * 
 * DNS：实际网络中所有的通讯都是基于ip地址，但是ip的缺点是不好记忆
 * DNS域名服务器，负责网址的名称与真实服务器ip对应关系解析
 * 能使用ip访问网站但是网址不行：dns设置错误
 * 
 * ## 端口
 * 一个主机可以有多个或一个ip，但一个主机可能需要同时有多个网络连接
 * 端口是一台主机的一个ip对应的窗口（好比一个主机就是一栋房子）
 * 端口用数字表示，范围是1-65535
 * 80代表www服务
 * 21代表ftp服务
 * 22代表telnet/ssh
 * 3389 肉鸡端口远程桌面
 * 443 https默认端口
 * 3306 1521 1433 8080 6379
 * 
 * 端口监听：服务器端等待客户端接入某一个端口号的状态，别人可以连接到该端口进行数据通讯
 * 
 * 防火墙：防端口进来不防出去
 * 
 * ## 协议 数据通讯的格式和流程
 * TCP/IP协议 
 * TCP：可靠通讯-Socket套接字编程，传输层协议
 * HTTP：应用层协议，使用文本传输数据
 * UDP：不可靠通讯，数据报文协议
 * 
 * ### 常用网络命令
 * ping：测试当前机器是否可以和某台通讯
 * netstat -n 以数字显示  -a 显示所有连接和监听端口
 * telnet 端口测试 尝试连接某个端口-测试某台主机的某个端口是否开放 telnet 地址 端口
 * tracert 端口追踪 wwww.163.com 用来获取从当前主机到163这个域名对应主机的所有要经过的路由器的记录
 * 
 * ## HTTP编程
 * 使用http客户端连接到某个服务器获取数据
 * @author Administrator
 *
 */
public class Test {

	public static void main(String[] args) {
		int[] arr = new int[] {1,2,3,6};
		int[] tar = new int[2];
		System.arraycopy(arr, 0, tar, 0, 2);
		System.out.println(Arrays.toString(tar));
	}
}



